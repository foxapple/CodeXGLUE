# @MUNTJAC_COPYRIGHT@
# @MUNTJAC_LICENSE@

"""Wraps information related to drag and drop operation."""


class DragAndDropEvent(object):
    """DragAndDropEvent wraps information related to drag and drop operation.
    It is passed by terminal implementation for L{DropHandler.drop} and
    L{AcceptCriterion.accept} methods.

    DragAndDropEvent instances contains both the dragged data in
    L{Transferable} (generated by L{DragSource} and details
    about the current drop event in L{TargetDetails} (generated by
    L{DropTarget}.
    """

    def __init__(self, transferable, dropTargetDetails):
        self._transferable = transferable
        self._dropTargetDetails = dropTargetDetails


    def getTransferable(self):
        """@return: the Transferable instance representing the data dragged
                    in this drag and drop event
        """
        return self._transferable


    def getTargetDetails(self):
        """@return: the TargetDetails containing drop target related details
                    of drag and drop operation
        """
        return self._dropTargetDetails
