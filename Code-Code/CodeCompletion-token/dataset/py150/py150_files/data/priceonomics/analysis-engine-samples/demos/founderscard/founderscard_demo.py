import requests
import json
from lxml import html

api_key = '34ed16e6b5f645c5a3cba39c75ee80b2'                        # prod public key
url_template = 'https://api.engine.priceonomics.com/v1/apps/%s'     # prod endpoint

# generated by logging in with FoundersCard.com credentials and then pulling the raw cookie content from the browser
session_cookie = '_FoundersCard_session=BLAHBLAHBLAH' # fill this yourself

# generic input that should work for any FoundersCard URL
input_fetch = {
    'async': False,
    'data': {
        'url': None,
        'country': 'US',
        'user_agent': True,
        'obey_robots': False,
        'headers': {
            'Cookie': session_cookie,
        },
    },
}


# direct Fetch to get links for travel benefits

print 'Fetching travel benefit providers for FoundersCard.com ...'

travel_benefits_link = 'https://founderscard.com/browse_by_category/Travel?sort=Popular'
input_fetch['data']['url'] = travel_benefits_link

headers = {
    'X-Access-Key': api_key,
}

r = requests.post(url_template % 'fetch', headers=headers, data=json.dumps(input_fetch))
output_full = r.json()

html_content = output_full['data']['content']
tree = html.fromstring(html_content.encode('utf-8'))
tree.make_links_absolute(travel_benefits_link) # convert all absolute links to full links

print 'Done.'

benefit_links = tree.xpath('//a[contains(@class, "title")]')
benefits = {}

for link in benefit_links[:3]:
    benefit_name = link.text.strip()
    print 'Fetching benefits for "%s" ...' % benefit_name
    input_fetch['data']['url'] = link.get('href')

    r = requests.post(url_template % 'fetch', headers=headers, data=json.dumps(input_fetch))
    output_full = r.json()

    html_content = output_full['data']['content']
    tree = html.fromstring(html_content.encode('utf-8'))
    tree.make_links_absolute(travel_benefits_link)

    benefits[benefit_name] = tree.xpath('//div[contains(@id, "how_to_redeem")]')[0].text_content()

    print 'Done.'

with open('benefits.json', 'w') as f:
    f.write(json.dumps(benefits))

